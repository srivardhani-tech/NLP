#2 FSA
class FSA:
    def __init__(self, states, alphabet, transitions, start_state, accept_states):
        self.states = states
        self.alphabet = alphabet
        self.transitions = transitions
        self.start_state = start_state
        self.accept_states = accept_states

    def recognize(self, string):
        current_state = self.start_state
        for char in string:
            if char not in self.alphabet:
                return False
            if current_state not in self.transitions:
                return False
            current_state = self.transitions[current_state].get(char, None)
            if current_state is None:
                return False
        return current_state in self.accept_states

# Define the states, alphabet, transitions, start state, and accept states
states = {'q0', 'q1', 'q2'}
alphabet = {'a', 'b'}
transitions = {
    'q0': {'a': 'q1'},
    'q1': {'b': 'q2'},
    'q2': {},
}
start_state = 'q0'
accept_states = {'q2'}

# Create the FSA object
fsa = FSA(states, alphabet, transitions, start_state, accept_states)

# Test the FSA with some strings
print(fsa.recognize('ab'))  # True
print(fsa.recognize('aab'))  # False
print(fsa.recognize('abab'))  # True
print(fsa.recognize('ababab'))  # False
print(fsa.recognize('ba'))  # False
